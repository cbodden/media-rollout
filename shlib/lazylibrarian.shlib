_SERVICE_NAME+=( "lazylibrarian:5299" )

readonly _LL_HOME="/home/lazylibrarian/.lazylibrarian"

function _lazylibrarian_install()
{
    local _FNC_NAME=$(echo ${FUNCNAME} \
        | cut -d_ -f2)

    getent group downloads || groupadd downloads

    if [ -z "$(getent passwd ${_FNC_NAME})" ]
    then
        addgroup ${_FNC_NAME}
        adduser --system ${_FNC_NAME} --ingroup ${_FNC_NAME}
        usermod -a -G downloads ${_FNC_NAME}
    fi

    cd /opt/
    git clone https://github.com/DobyTang/LazyLibrarian.git
    chown -R lazylibrarian:lazylibrarian /opt/LazyLibrarian/
    cp LazyLibrarian/init/lazylibrarian.default /etc/default/lazylibrarian
    sed -i 's/RUN_AS=$USER.*/RUN_AS=lazylibrarian/' /etc/default/lazylibrarian
    cp LazyLibrarian/init/lazylibrarian.initd /etc/init.d/lazylibrarian

    chown -R lazylibrarian:downloads /${_PATH}/books
    chmod a+x /etc/init.d/lazylibrarian
    update-rc.d ${_FNC_NAME} defaults
}

function _lazylibrarian_configure()
{
    local _FNC_NAME=$(echo ${FUNCNAME} \
        | cut -d_ -f2)

    local _SRVC_CHECK=$(systemctl cat ${_FNC_NAME} 2>&1 \
        | wc -l)

    if [[ ${_SRVC_CHECK} -gt "2" ]]
    then
        printf "%s\n" \
            "[${RED}***${CLR}] Configuring ${_FNC_NAME}"

        rm -rf ${_LL_HOME}/*
        systemctl start ${_FNC_NAME}
        sleep 5
        systemctl stop ${_FNC_NAME}

        local _SAB_API=$(cat ${_SAB_HOME}/sabnzbd.ini \
            | awk '/^api_key/ {print $3}')

        local _NH_API=$(yq read ${_NH_HOME}/nzbhydra.yml main.apiKey)

        rm -rf ${_LL_HOME}/*

        cat ${PROGDIR}/config_files/lazylibrarian.ini \
            | sed "s/RM_SH/${_IP}/g" \
            | sed "s/RM_SP/8080/g" \
            | sed "s/RM_SA/${_SAB_API}/g" \
            | sed "s/RM_NH/${_IP}/g" \
            | sed "s/RM_NP/5076/g" \
            | sed "s/RM_NA/${_NH_API}/g" \
            >> ${_LL_HOME}/config.ini

        chown -R lazylibrarian:lazylibrarian ${_LL_HOME}
        systemctl start ${_FNC_NAME}

        printf "%s\n" \
            "[${BLU}***${CLR}] ${_FNC_NAME} configured"

    else
        printf "%s\n" \
            "[${RED}***${CLR}] ${_FNC_NAME} not installed"

    fi
}

function _lazylibrarian_remove()
{
    local _FNC_NAME=$(echo ${FUNCNAME} \
        | cut -d_ -f2)

    local _SRVC_CHECK=$(systemctl cat ${_FNC_NAME} 2>&1 \
        | wc -l)

    if [[ ${_SRVC_CHECK} -gt "2" ]]
    then
        printf "%s\n" \
            "[${RED}***${CLR}] ${_FNC_NAME} IS ABOUT TO BE REMOVED"

        _pause

        systemctl stop ${_FNC_NAME}
        systemctl kill ${_FNC_NAME}
        systemctl disable ${_FNC_NAME}
        sleep 5
        rm -r /opt/LazyLibrarian/
        rm /etc/default/lazylibrarian
        rm /etc/init.d/lazylibrarian

        userdel ${_FNC_NAME}

        printf "%s\n" \
            "[${BLU}***${CLR}] ${_FNC_NAME} HAS BEEN REMOVED"

    else
        printf "%s\n" \
            "[${BLU}***${CLR}] ${_FNC_NAME} NOT INSTALLED OR DAMAGED"

    fi
}
