function _menu() {
    printf "%s\n" \
        "This script is for deploying, configuring, or deleting either an" \
        "entire media stack or just bits and pieces of it." \
        "" \
        "The following prompts will ask you for options so that your setup " \
        "can be tailored to your liking" ""

    _pause
}

function _menuCONF()
{
    for ITER in "${_SERVICE_ID[@]}"
    do
        _CONF_DLOAD+=($(echo ${ITER} | awk -F'[_:]' '/^DLOAD/ {print $2}' ))
        _CONF_SRCH+=($(echo ${ITER} | awk -F'[_:]' '/^SRCH/ {print $2}' ))
        _CONF_ALL+=($(echo ${ITER} | awk -F'[_:]' '/^MVS/ {print $2}' ))
        _CONF_ALL+=($(echo ${ITER} | awk -F'[_:]' '/^TV/ {print $2}' ))
        _CONF_ALL+=($(echo ${ITER} | awk -F'[_:]' '/^SBT/ {print $2}' ))
        _CONF_ALL+=($(echo ${ITER} | awk -F'[_:]' '/^TTL/ {print $2}' ))
        _CONF_ALL+=($(echo ${ITER} | awk -F'[_:]' '/^BSERV/ {print $2}' ))
        _CONF_ALL+=($(echo ${ITER} | awk -F'[_:]' '/^MSERV/ {print $2}' ))
        _CONF_ALL+=($(echo ${ITER} | awk -F'[_:]' '/^BOOKS/ {print $2}' ))
        _CONF_ALL+=($(echo ${ITER} | awk -F'[_:]' '/^MUSIC/ {print $2}' ))
    done

    for ITER in "${_CONF_DLOAD[@]}"
    do
        if [[ ! -z $(systemctl status ${ITER} | grep Active) ]]
        then
            if type _${ITER}_configure &>/dev/null
            then
                _${ITER}_configure
            fi
        fi
    done

    for ITER in "${_CONF_SRCH[@]}"
    do
        if [[ ! -z $(systemctl status ${ITER} | grep Active) ]]
        then
            if type _${ITER}_configure &>/dev/null
            then
                _${ITER}_configure
            fi
        fi
    done

    for ITER in "${_CONF_ALL[@]}"
    do
        if [[ ! -z $(systemctl status ${ITER} | grep Active) ]]
        then
            if type _${ITER}_configure &>/dev/null
            then
                _${ITER}_configure
            fi
        fi
    done

    _finish_configure
    exit 0
}

function _menuREMOVE()
{
    clear

    printf "%s\n" \
        "" "${RED}***THIS WILL REMOVE ALL APPLICATIONS AND SETTINGS***${CLR} "

    pause

    for ITER in "${_SERVICE_ID[@]}"
    do
        _REMOVE+=($(echo ${ITER} | cut -d_ -f2 | cut -d: -f1 ))
    done

    for ITER in "${_REMOVE[@]}"
    do
        _${ITER}_remove
    done

    exit 0
}

function _menuTV()
{
    printf "%s\n" \
        "" "Let's start by selecting a tv show service:"

    declare -a _TV=( "none" )
    for ITER in "${_SERVICE_ID[@]}"
    do
        _TV+=( $(echo ${ITER} | grep ^TV | cut -d_ -f2 | cut -d: -f1 ))
    done

    _CNT=0
    for ITER in "${_TV[@]}"
    do
        echo "[${_CNT}] $(echo ${ITER})"
        _CNT=$((_CNT+1))
    done

    _CNT=$((_CNT-1))
    while :
    do
        read -p "Choose a TV service by number (only one): " _TV_READ
        if [[ ! -z ${_TV_READ} ]]
        then
            if ((_TV_READ >= 0 && _TV_READ <= ${_CNT}))
            then
                if [[ "${_TV_READ}" -ge 1 ]]
                then
                    _menuINSTALL+=( "${_TV[${_TV_READ}]}" )
                fi
                break
            else
                printf "%s\n" \
                    "Not a menu option. Try again."
            fi
        else
            printf "%s\n" \
                "Not a menu option. Try again."
        fi
    done
}

function _menuMVS()
{
    printf "%s\n" \
        "" "Now let's add a movie service:"

    declare -a _MVS=( "none" )
    for ITER in "${_SERVICE_ID[@]}"
    do
        _MVS+=( $(echo ${ITER} | grep ^MVS | cut -d_ -f2 | cut -d: -f1 ))
    done

    _CNT=0
    for ITER in "${_MVS[@]}"
    do
        echo "[${_CNT}] $(echo ${ITER})"
        _CNT=$((_CNT+1))
    done

    _CNT=$((_CNT-1))
    while :
    do
        read -p "Choose a movie service by number (only one): " _MVS_READ
        if [[ ! -z ${_MVS_READ} ]]
        then
            if ((_MVS_READ >= 0 && _MVS_READ <= ${_CNT}))
            then
                if [[ "${_MVS_READ}" -ge 1 ]]
                then
                    _menuINSTALL+=( "${_MVS[${_MVS_READ}]}" )
                fi
                break
            else
                printf "%s\n" \
                    "Not a menu option. Try again."
            fi
        else
            printf "%s\n" \
                "Not a menu option. Try again."
        fi
    done
}

function _menuSBT()
{
    if [ "${_MVS_READ}" -lt 1 ] && [ "${_TV_READ}" -lt 1 ]
    then
        return
    fi

    printf "%s\n" \
        "" "Now let's add subtitle provider:"

    declare -a _SBT=( "none" )
    for ITER in "${_SERVICE_ID[@]}"
    do
        _SBT+=( $(echo ${ITER} | grep ^SBT | cut -d_ -f2 | cut -d: -f1 ))
    done

    _CNT=0
    for ITER in "${_SBT[@]}"
    do
        echo "[${_CNT}] $(echo ${ITER})"
        _CNT=$((_CNT+1))
    done

    _CNT=$((_CNT-1))
    while :
    do
        read -p "Choose a subtitle service by number (only one): " _SBT_READ
        if [[ ! -z ${_SBT_READ} ]]
        then
            if ((_SBT_READ >= 0 && _SBT_READ <= ${_CNT}))
            then
                if [[ "${_SBT_READ}" -ge 1 ]]
                then
                    _menuINSTALL+=( "${_SBT[${_SBT_READ}]}" )
                fi
                break
            else
                printf "%s\n" \
                    "Not a menu option. Try again."
            fi
        else
            printf "%s\n" \
                "Not a menu option. Try again."
        fi
    done
}

function _menuMUSIC()
{
    printf "%s\n" \
        "" "Now let's add a music service:"

    declare -a _MUSIC=( "none" )
    for ITER in "${_SERVICE_ID[@]}"
    do
        _MUSIC+=( $(echo ${ITER} | grep ^MUSIC | cut -d_ -f2 | cut -d: -f1 ))
    done

    _CNT=0
    for ITER in "${_MUSIC[@]}"
    do
        echo "[${_CNT}] $(echo ${ITER})"
        _CNT=$((_CNT+1))
    done

    _CNT=$((_CNT-1))
    while :
    do
        read -p "Choose a music service by number (only one): " _MUSIC_READ
        if [[ ! -z ${_MUSIC_READ} ]]
        then
            if ((_MUSIC_READ >= 0 && _MUSIC_READ <= ${_CNT}))
            then
                if [[ "${_MUSIC_READ}" -ge 1 ]]
                then
                    _menuINSTALL+=( "${_MUSIC[${_MUSIC_READ}]}" )
                fi
                break
            else
                printf "%s\n" \
                    "Not a menu option. Try again."
            fi
        else
            printf "%s\n" \
                "Not a menu option. Try again."
        fi
    done
}

function _menuDLOAD()
{
    printf "%s\n" \
        "" "Now let's add a downloader:"

    declare -a _DLOAD=( "none" )
    for ITER in "${_SERVICE_ID[@]}"
    do
        _DLOAD+=( $(echo ${ITER} | grep ^DLOAD | cut -d_ -f2 | cut -d: -f1 ))
    done

    _CNT=0
    for ITER in "${_DLOAD[@]}"
    do
        echo "[${_CNT}] $(echo ${ITER})"
        _CNT=$((_CNT+1))
    done

    _CNT=$((_CNT-1))
    while :
    do
        read -p "Choose a downloader by number (only one): " _DLOAD_READ
        if [[ ! -z ${_DLOAD_READ} ]]
        then
            if ((_DLOAD_READ >= 0 && _DLOAD_READ <= ${_CNT}))
            then
                if [[ "${_DLOAD_READ}" -ge 1 ]]
                then
                    _menuINSTALL+=( "${_DLOAD[${_DLOAD_READ}]}" )
                fi
                break
            else
                printf "%s\n" \
                    "Not a menu option. Try again."
            fi
        else
            printf "%s\n" \
                "Not a menu option. Try again."
        fi
    done
}

function _menuSRCH()
{
    printf "%s\n" \
        "" "Now let's add search services:"

    declare -a _SRCH=( "none" )
    for ITER in "${_SERVICE_ID[@]}"
    do
        _SRCH+=( $(echo ${ITER} | grep ^SRCH | cut -d_ -f2 | cut -d: -f1 ))
    done

    _CNT=0
    for ITER in "${_SRCH[@]}"
    do
        echo "[${_CNT}] $(echo ${ITER})"
        _CNT=$((_CNT+1))
    done

    _CNT=$((_CNT-1))
    while :
    do
        read -p "Choose a search service by number (only one): " _SRCH_READ
        if [[ ! -z ${_SRCH_READ} ]]
        then
            if ((_SRCH_READ >= 0 && _SRCH_READ <= ${_CNT}))
            then
                if [[ "${_SRCH_READ}" -ge 1 ]]
                then
                    _menuINSTALL+=( "${_SRCH[${_SRCH_READ}]}" )
                fi
                break
            else
                printf "%s\n" \
                    "Not a menu option. Try again."
            fi
        else
            printf "%s\n" \
                "Not a menu option. Try again."
        fi
    done
}

function _menuBOOKS()
{
    printf "%s\n" \
        "" "Now let's add a book service:"

    declare -a _BOOKS=( "none" )
    for ITER in "${_SERVICE_ID[@]}"
    do
        _BOOKS+=( $(echo ${ITER} | grep ^BOOKS | cut -d_ -f2 | cut -d: -f1 ))
    done

    _CNT=0
    for ITER in "${_BOOKS[@]}"
    do
        echo "[${_CNT}] $(echo ${ITER})"
        _CNT=$((_CNT+1))
    done

    _CNT=$((_CNT-1))
    while :
    do
        read -p "Choose a book service by number (only one): " _BOOKS_READ
        if [[ ! -z ${_BOOKS_READ} ]]
        then
            if ((_BOOKS_READ >= 0 && _BOOKS_READ <= ${_CNT}))
            then
                if [[ "${_BOOKS_READ}" -ge 1 ]]
                then
                    _menuINSTALL+=( "${_BOOKS[${_BOOKS_READ}]}" )
                fi
                break
            else
                printf "%s\n" \
                    "Not a menu option. Try again."
            fi
        else
            printf "%s\n" \
                "Not a menu option. Try again."
        fi
    done
}

function _menuBSERV()
{
    printf "%s\n" \
        "" "Now let's add a book server:"

    declare -a _BSERV=( "none" )
    for ITER in "${_SERVICE_ID[@]}"
    do
        _BSERV+=( $(echo ${ITER} | grep ^BSERV | cut -d_ -f2 | cut -d: -f1 ))
    done

    _CNT=0
    for ITER in "${_BSERV[@]}"
    do
        echo "[${_CNT}] $(echo ${ITER})"
        _CNT=$((_CNT+1))
    done

    _CNT=$((_CNT-1))
    while :
    do
        read -p "Choose a book server by number (only one): " _BSERV_READ
        if [[ ! -z ${_BSERV_READ} ]]
        then
            if ((_BSERV_READ >= 0 && _BSERV_READ <= ${_CNT}))
            then
                if [[ "${_BSERV_READ}" -ge 1 ]]
                then
                    _menuINSTALL+=( "${_BSERV[${_BSERV_READ}]}" )
                fi
                break
            else
                printf "%s\n" \
                    "Not a menu option. Try again."
            fi
        else
            printf "%s\n" \
                "Not a menu option. Try again."
        fi
    done
}

function _menuMSERV()
{
    printf "%s\n" \
        "" "Now let's add a media server:"

    declare -a _MSERV=( "none" )
    for ITER in "${_SERVICE_ID[@]}"
    do
        _MSERV+=( $(echo ${ITER} | grep ^MSERV | cut -d_ -f2 | cut -d: -f1 ))
    done

    _CNT=0
    for ITER in "${_MSERV[@]}"
    do
        echo "[${_CNT}] $(echo ${ITER})"
        _CNT=$((_CNT+1))
    done

    _CNT=$((_CNT-1))
    while :
    do
        read -p "Choose a media server by number (only one): " _MSERV_READ
        if [[ ! -z ${_MSERV_READ} ]]
        then
            if ((_MSERV_READ >= 0 && _MSERV_READ <= ${_CNT}))
            then
                if [[ "${_MSERV_READ}" -ge 1 ]]
                then
                    _menuINSTALL+=( "${_MSERV[${_MSERV_READ}]}" )
                fi
                break
            else
                printf "%s\n" \
                    "Not a menu option. Try again."
            fi
        else
            printf "%s\n" \
                "Not a menu option. Try again."
        fi
    done
}

function _menuTTL()
{
    if [ "${_MSERV_READ}" -lt 1 ]
    then
        return
    fi

    printf "%s\n" \
        "" "Now let's add metrics for Plex:"

    declare -a _TTL=( "none" )
    for ITER in "${_SERVICE_ID[@]}"
    do
        _TTL+=( $(echo ${ITER} | grep ^TTL | cut -d_ -f2 | cut -d: -f1 ))
    done

    _CNT=0
    for ITER in "${_TTL[@]}"
    do
        echo "[${_CNT}] $(echo ${ITER})"
        _CNT=$((_CNT+1))
    done

    _CNT=$((_CNT-1))
    while :
    do
        read -p "Choose a metrics provider by number (only one): " _TTL_READ
        if [[ ! -z ${_TTL_READ} ]]
        then
            if ((_TTL_READ >= 0 && _TTL_READ <= ${_CNT}))
            then
                if [[ "${_TTL_READ}" -ge 1 ]]
                then
                    _menuINSTALL+=( "${_TTL[${_TTL_READ}]}" )
                fi
                break
            else
                printf "%s\n" \
                    "Not a menu option. Try again."
            fi
        else
            printf "%s\n" \
                "Not a menu option. Try again."
        fi
    done
}

function _menuRUN()
{
    _pause

    printf "%s\n" \
        "" "These are your service selections:"

    for ITER in "${_menuINSTALL[@]}"
    do
        echo "${ITER}"
    done

    while :
    do
        read -p "Do you want to install them (Yes or No): " _M_INSTALL
        case ${_M_INSTALL} in
            [yY][eE][sS]|[yY])
                _storage
                _apt

                for ITER in "${_menuINSTALL[@]}"
                do
                    _${ITER}_install
                done

                _finish
                _clean
                _install_reboot
                exit 0
                ;;
            [nN][oO]|[nN])
                exit 1
                ;;
            * )
                printf "%s\n" "Please answer Yes or No."
                ;;
        esac
    done
}
